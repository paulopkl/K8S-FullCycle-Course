apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 3
  template:
    metadata:
      labels:
        app: goserver
    spec:
      containers: # Especifica containers a serem utilizados
        - name: goserver
          image: paulopkl/go-without-install:v7 # imagem Docker do APP
          livenessProbe: # HealthCheck para ver se o container caiu
            httpGet: # Requisições HTTP
              path: /healthz
              port: 8080
            periodSeconds: 5 # Quanto em quanto tempo faz a verificação
            failureThreshold: 3 # Tentativas de requisição dando ERRO
            timeoutSeconds: 1 # Tempo máximo da requisição
            successThreshold: 1 # Tentativas de requisição dando SUCESSO

          envFrom: # Especifica de onde vem as variáveis ambientes, puxando pelo seletor
            - configMapRef: # Referencia um ConfigMap
                name: goserver-env
            - secretRef: # Referencia um Secret
                name: goserver-secret

          volumeMounts: # Especifica os volumes a serem utilizados, puxando pelo seletor
            - mountPath: "/usr/app/myfamily"
              name: config-volume
              readOnly: true

      volumes: # Cria um volume puxando um ConfigMap
        - name: config-volume
          configMap:
            name: configmap-family
            items:
              - key: members
                path: "family.txt"
      